# tooltxvip.py - File ch·ª©a to√†n b·ªô logic game T√†i X·ªâu
import random
import time
import sys

# M√É M√ÄU ANSI
trang = "\033[1;37m\033[1m"
xanh_la = "\033[1;32m\033[1m"
xanh_duong = "\033[1;34m\033[1m"
xanhnhat = '\033[1m\033[38;5;51m'
do = "\033[1;31m\033[1m\033[1m"
xam = '\033[1;30m\033[1m'
vang = "\033[1;33m\033[1m"
tim = "\033[1;35m\033[1m"
RESET = "\033[0m" # ƒê·∫∑t l·∫°i m√†u v·ªÅ m·∫∑c ƒë·ªãnh

# THANH CH·ªà D·∫™N
Thanh_xau = "\033[1;97m‚Æë "
thanh_dep = "\033[1;97m‚Æë "

lich_su = []

# C√îNG TH·ª®C RANDOM + T√çNH T·ªà L·ªÜ X√ÅC XU·∫§T D·ª∞ ƒêO√ÅN
def du_doan_theo_cong_thuc(dice):
    tong = sum(dice)
    dice_sorted = sorted(dice)

    # ... (C√°c h√†m logic T√†i X·ªâu gi·ªØ nguy√™n) ...
    # (ƒê·ªÉ ti·∫øt ki·ªám kh√¥ng gian, t√¥i l∆∞·ª£c b·ªõt code chi ti·∫øt ·ªü ƒë√¢y, nh∆∞ng b·∫°n d√πng code g·ªëc c·ªßa m√¨nh)
    # ======= X·ªàU =======
    if tong == 3:
        return random.choice(["T√†i","X·ªâu"])
    elif tong == 4:
        return random.choice(["T√†i","X·ªâu"])
    elif tong == 5:
        return "X·ªâu"
    elif tong == 6:
        if dice_sorted in [[3,2,1],[4,1,1]]:
            return "X·ªâu"
        else:
            return "T√†i"
    elif tong == 7:
        if dice_sorted in [[1,2,4],[2,2,3],[1,3,3]]:
            return "X·ªâu"
        elif dice_sorted in [[1,1,5]]:
            return "T√†i"
        else:
            return random.choice(["T√†i", "X·ªâu"])
    elif tong == 8:
        return "X·ªâu" if dice_sorted == [1,3,4] else random.choice(["T√†i","X·ªâu"])
    elif tong == 9:
        return "X·ªâu" if dice_sorted == [2,3,4] else random.choice(["T√†i","X·ªâu"])
    elif tong == 10:
        return random.choice(["T√†i","X·ªâu"])

    # ======= T√ÄI =======
    elif tong == 11:
        return "X·ªâu" if dice_sorted == [6,4,1] else random.choice(["T√†i","X·ªâu"])
    elif tong == 12:
        if dice_sorted in [[2,4,6],[1,5,6],[3,3,6],[2,5,5]]:
            return "X·ªâu"
        else:
            return "T√†i"
    elif tong == 13:
        if dice_sorted in [[5,5,3],[6,6,1]]:
            return "X·ªâu"
        elif dice_sorted in [[5,3,1],[6,3,1]]:
            return "T√†i"
        else:
            return "T√†i"
    elif tong == 14:
        return random.choice(["T√†i","X·ªâu"])
    elif tong == 15:
        return random.choice(["T√†i","X·ªâu"])
    elif tong == 16:
        return random.choice(["T√†i","X·ªâu"])
    elif tong == 17:
        return "X·ªâu" if dice_sorted == [6,3,1] else random.choice(["T√†i","X·ªâu"])
    elif tong == 18:
        return "T√†i" if dice_sorted == [6,6,6] else random.choice(["T√†i","X·ªâu"])

    return "T√†i" if tong > 10 else "X·ªâu"

# THU·∫¨N NGH·ªäCH
def du_doan_thuan_nghich(dice):
    tong = sum(dice)
    chan = (tong % 2 == 0)
    du_doan_thuan = "T√†i" if chan else "X·ªâu"
    du_doan_nghich = "X·ªâu" if chan else "T√†i"
    return du_doan_thuan, du_doan_nghich

# THEO C·∫¶U + ƒê·∫¢O C·∫¶U + L·∫¨T NG∆Ø·ª¢C C·∫¶U
def du_doan_theo_cau(lich_su):
    if len(lich_su) < 3:
        return None

    if len(lich_su) >= 4:
        # C·∫ßu b·ªát 4+
        if all(kq == "T√†i" for kq in lich_su[-4:]):
            return random.choice(["T√†i", "X·ªâu"]) 
        if all(kq == "X·ªâu" for kq in lich_su[-4:]):
            return random.choice(["X·ªâu", "T√†i"])

    if len(lich_su) >= 7:
        # C·∫ßu 1-1 d√†i
        if all(lich_su[i] != lich_su[i+1] for i in range(-7, -1)):
            return "T√†i" if lich_su[-1] == "X·ªâu" else "X·ªâu"
        # C·∫ßu 2-2 ho·∫∑c 3-3 
        if lich_su[-6:-4] == lich_su[-4:-2] and lich_su[-2:] != lich_su[-4:-2]: 
            return "T√†i" if lich_su[-1] == "X·ªâu" else "X·ªâu"

    if len(lich_su) >= 3:
        # C·∫ßu 1-2-1
        if lich_su[-3] == "X·ªâu" and lich_su[-2:] == ["T√†i", "T√†i"]:
            return "X·ªâu"
        if lich_su[-3] == "T√†i" and lich_su[-2:] == ["X·ªâu", "X·ªâu"]:
            return "T√†i"

    if len(lich_su) >= 12:
        # L·∫≠t ng∆∞·ª£c c·∫ßu theo c·∫∑p g·∫ßn nh·∫•t
        cap_cuoi = tuple(lich_su[-2:])
        count = sum(1 for i in range(-12, -2) if tuple(lich_su[i:i+2]) == cap_cuoi)
        if count >= 2:
            return "T√†i" if lich_su[-1] == "X·ªâu" else "X·ªâu"

    # D·ª±a v√†o k·∫øt qu·∫£ T/X chi·∫øm ∆∞u th·∫ø trong to√†n b·ªô l·ªãch s·ª≠
    tai_count = lich_su.count("T√†i")
    xiu_count = lich_su.count("X·ªâu")
    if tai_count > xiu_count:
        return "T√†i"
    elif xiu_count > tai_count:
        return "X·ªâu"
    else:
        # Tr∆∞·ªùng h·ª£p c√¢n b·∫±ng, ƒëo√°n ƒë·∫£o c·∫ßu so v·ªõi k·∫øt qu·∫£ cu·ªëi
        return "T√†i" if lich_su[-1] == "X·ªâu" else "X·ªâu"

def du_doan_xucxac(xucsac: str):
    if len(xucsac) != 3 or not all(ch in "123456" for ch in xucsac):
        print(f"{do}‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë√∫ng 3 con x√∫c x·∫Øc!{RESET}")
        return None

    dice = [int(ch) for ch in xucsac]

    du_doan_ct = du_doan_theo_cong_thuc(dice)
    thuan, nghich = du_doan_thuan_nghich(dice)

    du_doan_cau = du_doan_theo_cau(lich_su)

    # LOGIC K·∫æT H·ª¢P D·ª∞ ƒêO√ÅN
    if du_doan_cau:
        du_doan = du_doan_cau
    else:
        cong_thuc_moi = random.choice([thuan, nghich])
        if du_doan_ct == cong_thuc_moi:
            du_doan = du_doan_ct
        else:
            du_doan = du_doan_ct if random.randint(1, 100) <= 70 else cong_thuc_moi

    acc = random.randint(75, 99)
    
    # Hi·ªÉn th·ªã k·∫øt qu·∫£ d·ª± ƒëo√°n v·ªõi m√†u
    kq_color = xanh_la if du_doan == "T√†i" else vang
    print(f"\n{vang}üéØ D·ª± ƒëo√°n: {kq_color}{du_doan} (T·ª∑ l·ªá ch√≠nh x√°c: {acc}%) {RESET}")
    return du_doan

def type_text(text, color=trang, delay=0.03):
    """H√†m hi·ªÉn th·ªã t·ª´ng k√Ω t·ª± m·ªôt."""
    # S·ª¨ D·ª§NG sys.stdout.write(color) v√† sys.stdout.write(RESET + "\n")
    # T∆∞∆°ng t·ª± nh∆∞ trong run.py
    sys.stdout.write(color)
    for char in text:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(delay)
    sys.stdout.write(RESET + "\n")

def main():
    
   
    type_text(" Truy c·∫≠p th√†nh c√¥ng v√†o tool !", color=xanh_la, delay=0.04)

    while True:
        # B·ªé ICON
        nhap = input(f"\n{thanh_dep}{xanhnhat}Nh·∫≠p 3 con x√∫c x·∫Øc ({vang}vd: 631{xanhnhat}, ho·∫∑c {do}q{xanhnhat} ƒë·ªÉ tho√°t): {trang}").strip()
        if nhap.lower() == 'q':
            break

        du_doan = du_doan_xucxac(nhap)
        if not du_doan:
            continue

        # B·ªé ICON
        thuc_te = input(f"{thanh_dep}{xanh_duong}K·∫øt qu·∫£ th·ª±c t·∫ø ({xanh_la}t{xanh_duong} = T√†i/{vang}x{xanh_duong} = X·ªâu): {trang}").strip().lower()
        if thuc_te not in ['t', 'x']:
            print(f"{do}‚ö†Ô∏è Vui l√≤ng nh·∫≠p 't' ho·∫∑c 'x'{RESET}")
            continue

        ket_qua = "T√†i" if thuc_te == 't' else "X·ªâu"
        lich_su.append(ket_qua)

        if du_doan.startswith(ket_qua):
            # B·ªé ICON
            print(f"{xanh_la}ƒê√£ D·ª± ƒêo√°n Ch√≠nh X√°c!{RESET}")
        else:
            # B·ªé ICON
            print(f"{do}D·ª± ƒêo√°n ƒê√£ Sai!{RESET}")

        # In l·ªãch s·ª≠ 5 k·∫øt qu·∫£ g·∫ßn nh·∫•t ƒë·ªÉ d·ªÖ theo d√µi c·∫ßu (B·ªé ICON üìù)
        if lich_su:
            lich_su_mau = []
            for kq in lich_su[-5:]:
                color = xanh_la if kq == "T√†i" else vang
                lich_su_mau.append(f"{color}{kq}{RESET}")
            print(f"{thanh_dep}{tim}L·ªãch s·ª≠ 5 k·∫øt qu·∫£ g·∫ßn nh·∫•t: {trang}{', '.join(lich_su_mau)}")


if __name__ == "__main__":
    main() # Gi·ªØ nguy√™n main() ƒë·ªÉ n√≥ c√≥ th·ªÉ ch·∫°y khi ƒë∆∞·ª£c exec() trong run.py
